import os, sys
from pathlib import Path

class ExtraDataClass():
    def Reset(self):
        setattr(self, "Flanked penalty", 10)
        setattr(self, "NPC max combat turn time", 20)
        setattr(self, "Painted surface status chance", 100)
        setattr(self, "Min Throw Distance", 5)
        setattr(self, "Max Throw Distance", 30)
        setattr(self, "Telekinesis Range", 4)
        setattr(self, "End Of Combat SightRange Multiplier", 2.5)
        setattr(self, "Sneak Damage Multiplier", 1)
        setattr(self, "Infectious Disease Depth", 5)
        setattr(self, "Infectious Disease Radius", 5)
        setattr(self, "Haste Speed Modifier", 1.5)
        setattr(self, "Slow Speed Modifier", 0.8)
        setattr(self, "Ally Joins Ally SightRange Multiplier", 2.5)
        setattr(self, "Surface Distance Evaluation", 2)
        setattr(self, "Once Per Combat Skill Realtime Cooldown", 60)
        setattr(self, "HintDuration", 5)
        setattr(self, "Freeze Contact Status Duration", 1)
        setattr(self, "Burn Contact Status Duration", 1)
        setattr(self, "Stun Contact Status Duration", 1)
        setattr(self, "Poison Contact Status Duration", 1)
        setattr(self, "Chill Contact Status Duration", 3)
        setattr(self, "EntangledContactStatusDuration", 1)
        setattr(self, "Projectile Terrain Offset", 3)
        setattr(self, "Surface Clear Owner Time", 1)
        setattr(self, "Offhand Attack Shield Block", 80)
        setattr(self, "Skill Range Per Ability", 2)
        setattr(self, "Summon Life Link Damage Modifier", 0)
        setattr(self, "Shackles Of Pain Damage Modifier", 1)
        setattr(self, "Decaying Touch Damage Modifier", 1)
        setattr(self, "TargetCondition LowHP Percentage", 20)
        setattr(self, "Oiled Chance to Burn Boost", 30)
        setattr(self, "FirstItemTypeShift", 9)
        setattr(self, "SecondItemTypeShift", 16)
        setattr(self, "PickpocketGoldValuePerPoint", 200)
        setattr(self, "PickpocketWeightPerPoint", 2000)
        setattr(self, "PickpocketExperienceLevelsPerPoint", 4)
        setattr(self, "PersuasionAttitudeBonusPerPoint", 5)
        setattr(self, "WandUsesMax", 10)
        setattr(self, "AttributeBaseValue", 10)
        setattr(self, "AttributeCharCreationBonus", 1)
        setattr(self, "AttributeLevelGrowth", 2)
        setattr(self, "AttributeBoostGrowth", 0.75)
        setattr(self, "AttributeGrowthDamp", 0.7)
        setattr(self, "AttributeSoftCap", 40)
        setattr(self, "WitsGrowthDamp", 0.5)
        setattr(self, "VitalityStartingAmount", 21)
        setattr(self, "VitalityExponentialGrowth", 1.25)
        setattr(self, "VitalityLinearGrowth", 9.091)
        setattr(self, "VitalityToDamageRatio", 5)
        setattr(self, "VitalityToDamageRatioGrowth", 0.2)
        setattr(self, "ExpectedDamageBoostFromAttributePerLevel", 0.065)
        setattr(self, "ExpectedDamageBoostFromSkillAbilityPerLevel", 0.015)
        setattr(self, "ExpectedDamageBoostFromWeaponAbilityPerLevel", 0.025)
        setattr(self, "ExpectedConGrowthForArmorCalculation", 1)
        setattr(self, "FirstVitalityLeapLevel", 9)
        setattr(self, "FirstVitalityLeapGrowth", 1.25)
        setattr(self, "SecondVitalityLeapLevel", 13)
        setattr(self, "SecondVitalityLeapGrowth", 1.25)
        setattr(self, "ThirdVitalityLeapLevel", 16)
        setattr(self, "ThirdVitalityLeapGrowth", 1.25)
        setattr(self, "FourthVitalityLeapLevel", 18)
        setattr(self, "FourthVitalityLeapGrowth", 1.35)
        setattr(self, "DamageBoostFromAttribute", 0.05)
        setattr(self, "MonsterDamageBoostPerLevel", 0.02)
        setattr(self, "PhysicalArmourBoostFromAttribute", 0)
        setattr(self, "MagicArmourBoostFromAttribute", 0)
        setattr(self, "VitalityBoostFromAttribute", 0.07)
        setattr(self, "DodgingBoostFromAttribute", 0)
        setattr(self, "HealToDamageRatio", 1.3)
        setattr(self, "ArmorToVitalityRatio", 0.55)
        setattr(self, "ArmorRegenTimer", 0.01)
        setattr(self, "ArmorRegenConstGrowth", 1)
        setattr(self, "ArmorRegenPercentageGrowth", 10)
        setattr(self, "ArmorAfterHitCooldown", -7)
        setattr(self, "MagicArmorRegenTimer", 0.01)
        setattr(self, "MagicArmorRegenConstGrowth", 1)
        setattr(self, "MagicArmorRegenPercentageGrowth", 10)
        setattr(self, "MagicArmorAfterHitCooldown", -7)
        setattr(self, "ArmorHeadPercentage", 0.15)
        setattr(self, "ArmorUpperBodyPercentage", 0.3)
        setattr(self, "ArmorLowerBodyPercentage", 0.2)
        setattr(self, "ArmorShieldPercentage", 0.5)
        setattr(self, "ArmorHandsPercentage", 0.15)
        setattr(self, "ArmorFeetPercentage", 0.15)
        setattr(self, "ArmorBeltPercentage", 0.1)
        setattr(self, "ArmorAmuletPercentage", 0.12)
        setattr(self, "ArmorRingPercentage", 0.08)
        setattr(self, "SkillMemoryCostReductionFromAbility", 0)
        setattr(self, "CharacterBaseMemoryCapacity", 3)
        setattr(self, "CharacterBaseMemoryCapacityGrowth", 0.5)
        setattr(self, "CharacterAttributePointsPerMemoryCapacity", 1)
        setattr(self, "LoremasterBonusToMemory", 2)
        setattr(self, "AbilityBaseValue", 0)
        setattr(self, "NumStartingCombatAbilityPoints", 2)
        setattr(self, "CombatAbilityCap", 10)
        setattr(self, "CombatAbilityLevelGrowth", 1)
        setattr(self, "CombatAbilityNpcGrowth", 0.1)
        setattr(self, "CombatAbilityDamageBonus", 5)
        setattr(self, "CombatAbilityCritBonus", 1)
        setattr(self, "CombatAbilityCritMultiplierBonus", 5)
        setattr(self, "CombatAbilityAccuracyBonus", 5)
        setattr(self, "CombatAbilityDodgingBonus", 1)
        setattr(self, "CombatAbilityReflectionBonus", 5)
        setattr(self, "LeadershipRange", 8)
        setattr(self, "LeadershipDodgingBonus", 2)
        setattr(self, "LeadershipAllResBonus", 3)
        setattr(self, "NumStartingCivilAbilityPoints", 2)
        setattr(self, "CivilAbilityCap", 5)
        setattr(self, "CivilAbilityLevelGrowth", 4)
        setattr(self, "CivilPointOffset", 2)
        setattr(self, "SavethrowLowChance", 15)
        setattr(self, "SavethrowHighChance", 50)
        setattr(self, "SavethrowBelowLowPenalty", 5)
        setattr(self, "SavethrowPenaltyCap", -30)
        setattr(self, "CriticalBonusFromWits", 1)
        setattr(self, "InitiativeBonusFromWits", 1)
        setattr(self, "WeaponAccuracyPenaltyPerLevel", -20)
        setattr(self, "WeaponAccuracyPenaltyCap", -80)
        setattr(self, "ShieldAPCost", 0)
        setattr(self, "CharacterWeightLight", 40000)
        setattr(self, "CharacterWeightMedium", 70000)
        setattr(self, "CharacterWeightHeavy", 120000)
        setattr(self, "WeaponWeightLight", 1000)
        setattr(self, "WeaponWeightMedium", 3000)
        setattr(self, "WeaponWeightHeavy", 6000)
        setattr(self, "HighGroundThreshold", 2.4)
        setattr(self, "HighGroundBaseDamageBonus", 0.2)
        setattr(self, "HighGroundMeleeRange", 1)
        setattr(self, "HighGroundRangeMultiplier", 2.5)
        setattr(self, "LowGroundBaseDamagePenalty", -0.1)
        setattr(self, "SneakDefaultAPCost", 4)
        setattr(self, "SneakSpeedBoost", -30)
        setattr(self, "BlindRangePenalty", 3)
        setattr(self, "RangeBoostedGlobalCap", 30)
        setattr(self, "SurfaceDurationFromHitFloorReaction", 18)
        setattr(self, "SurfaceDurationFireIgniteOverride", 12)
        setattr(self, "SurfaceDurationFromCharacterBleeding", -1)
        setattr(self, "SurfaceDurationBlessedCursed", -1)
        setattr(self, "SurfaceDurationAfterDecay", -1)
        setattr(self, "SmokeDurationAfterDecay", 6)
        setattr(self, "DualWieldingAPPenalty", 2)
        setattr(self, "DualWieldingDamagePenalty", 0.5)
        setattr(self, "GhostLifeTime", 3)
        setattr(self, "ChanceToSetStatusOnContact", 100)
        setattr(self, "AbilityPhysArmorBonusBase", 5)
        setattr(self, "AbilityPhysArmorBonusPerPoint", 2)
        setattr(self, "AbilityPhysArmorBonusMax", 5)
        setattr(self, "AbilityMagicArmorBonusBase", 5)
        setattr(self, "AbilityMagicArmorBonusPerPoint", 2)
        setattr(self, "AbilityMagicArmorBonusMax", 5)
        setattr(self, "AbilityVitalityBonusBase", 3)
        setattr(self, "AbilityVitalityBonusPerPoint", 1)
        setattr(self, "AbilityVitalityBonusMax", 3)
        setattr(self, "SkillAbilityDamageToPhysicalArmorPerPoint", 0)
        setattr(self, "SkillAbilityDamageToMagicArmorPerPoint", 0)
        setattr(self, "SkillAbilityArmorRestoredPerPoint", 5)
        setattr(self, "SkillAbilityVitalityRestoredPerPoint", 5)
        setattr(self, "SkillAbilityHighGroundBonusPerPoint", 5)
        setattr(self, "SkillAbilityFireDamageBoostPerPoint", 5)
        setattr(self, "SkillAbilityPoisonAndEarthDamageBoostPerPoint", 5)
        setattr(self, "SkillAbilityAirDamageBoostPerPoint", 5)
        setattr(self, "SkillAbilityWaterDamageBoostPerPoint", 5)
        setattr(self, "SkillAbilityPhysicalDamageBoostPerPoint", 5)
        setattr(self, "SkillAbilityLifeStealPerPoint", 10)
        setattr(self, "LifestealFromReflectionModifier", 0)
        setattr(self, "SkillAbilityCritMultiplierPerPoint", 5)
        setattr(self, "SkillAbilityMovementSpeedPerPoint", 30)
        setattr(self, "SkillAbilitySummonsStatsPerPoint", 4)
        setattr(self, "SneakingAbilityMovementSpeedPerPoint", 6)
        setattr(self, "TalentAttributePointsBonus", 2)
        setattr(self, "TalentCombatAbilityPointsBonus", 1)
        setattr(self, "TalentCivilAbilityPointsBonus", 1)
        setattr(self, "TalentMemoryBonus", 3)
        setattr(self, "TalentQuestRootedMemoryBonus", 3)
        setattr(self, "TalentRagerPercentage", 70)
        setattr(self, "SoftLevelCap", 20)
        setattr(self, "PickpocketRequirementDecreaseFromFinesse", 1)
        setattr(self, "SkillCombustionRadius", 3)
        setattr(self, "TalentPerfectionistAccuracyBonus", 10)
        setattr(self, "TalentPerfectionistCriticalChanceBonus", 10)
        setattr(self, "TalentExecutionerActionPointBonus", 2)
        setattr(self, "TalentPointOffset", 2)
        setattr(self, "TalentViolentMagicCriticalChancePercent", 100)
        setattr(self, "TalentPointPerLevels", 5)
        setattr(self, "TalentQuickStepPartialApBonus", 1)
        setattr(self, "SkillHeightRangeMultiplier", 1)
        setattr(self, "AbilityPersuasionBonusPerPoint", 4)
        setattr(self, "FreeMovementDistanceWhenAttacking", 1)
        setattr(self, "TalentSneakingDamageBonus", 40)
        setattr(self, "MaximumSummonsInCombat", 4)
        setattr(self, "SpiritVisionFallbackRadius", 10)
        setattr(self, "AbilityPerseveranceArmorPerPoint", 5)
        setattr(self, "AiCoverProjectileTurnMemory", 2)
        setattr(self, "CarryWeightBase", 0)
        setattr(self, "CarryWeightPerStr", 10000)
        setattr(self, "MoveToCarryWeightRatio", 0.75)
        setattr(self, "TalentResistDeathVitalityPercentage", 20)
        setattr(self, "DeflectProjectileRange", 1)
        setattr(self, "SummoningAbilityBonus", 10)
        setattr(self, "SurfaceAbsorbBoostPerTilesCount", 10)
        setattr(self, "TalentWhatARushThreshold", 50)
        setattr(self, "IncarnateSummoningLevel", 10)
        setattr(self, "CleaveRangeOverride", 125)
        setattr(self, "DamageToThrownWeightRatio", 0.5)
        setattr(self, "FleeDistance", 13)
        setattr(self, "GlobalGoldValueMultiplier", 1)
        setattr(self, "PriceGrowth", 1.12)
        setattr(self, "FirstPriceLeapLevel", 9)
        setattr(self, "FirstPriceLeapGrowth", 1.75)
        setattr(self, "SecondPriceLeapLevel", 13)
        setattr(self, "SecondPriceLeapGrowth", 1.15)
        setattr(self, "ThirdPriceLeapLevel", 16)
        setattr(self, "ThirdPriceLeapGrowth", 1.5)
        setattr(self, "FourthPriceLeapLevel", 18)
        setattr(self, "FourthPriceLeapGrowth", 1.15)
        setattr(self, "PriceModCasualDifficulty", 2.1)
        setattr(self, "PriceModClassicDifficulty", 2.5)
        setattr(self, "PriceModHardcoreDifficulty", 2.7)
        setattr(self, "PriceBarterCoefficient", 0.1)
        setattr(self, "PriceAttitudeCoefficient", 0.005)
        setattr(self, "PriceRoundToFiveAfterAmount", 100)
        setattr(self, "PriceRoundToTenAfterAmount", 1000)
        setattr(self, "LevelCap", 35)
        setattr(self, "GMCharacterAttributeCap", 100)
        setattr(self, "GMCharacterArmorCap", 999999)
        setattr(self, "GMCharacterResistanceMin", -1000)
        setattr(self, "GMCharacterResistanceMax", 1000)
        setattr(self, "GMCharacterAPCap", 100)
        setattr(self, "GMCharacterSPCap", 3)
        setattr(self, "GMItemLevelCap", 50)
        setattr(self, "GMItemAttributeCap", 100)
        setattr(self, "GMItemArmorMin", -999999)
        setattr(self, "GMItemArmorMax", 999999)
        setattr(self, "GMItemResistanceMin", -1000)
        setattr(self, "GMItemResistanceMax", 1000)
        setattr(self, "LoneWolfMaxAPBonus", 2)
        setattr(self, "LoneWolfAPBonus", 2)
        setattr(self, "LoneWolfMagicArmorBoostPercentage", 60)
        setattr(self, "LoneWolfArmorBoostPercentage", 60)
        setattr(self, "LoneWolfVitalityBoostPercentage", 30)
        setattr(self, "LivingArmorHealPercentage", 35)
        setattr(self, "TorturerDamageStatusTurnIncrease", 1)
        setattr(self, "UnstableDamagePercentage", 50)
        setattr(self, "UnstableRadius", 3)
        setattr(self, "TalentResurrectExtraHealthPercent", 10)
        setattr(self, "PoisonedFoodDamage", 1)
        setattr(self, "PoisonedFoodDamageRange", 10)
        setattr(self, "PoisonedFoodDamageMultiplier", 40)
        setattr(self, "TraderDroppedItemsPercentage", 51)
        setattr(self, "TraderDroppedItemsCap", 5)
        setattr(self, "StatusDefaultDistancePerDamage", 0.75)
        setattr(self, "TraderDonationsRequiredAttitude", -45)
        setattr(self, "TeleportUnchainDistance", 50)
        setattr(self, "TalentHumanCriticalMultiplier", 10)
        setattr(self, "TalentHumanCriticalChance", 5)
        setattr(self, "TalentSneakingAPCost", 1)

    def __init__(self):
        self.Reset()

    def LoadFile(self, f:str):
        key_pattern = '^.*?key\s*\"(.*?)\",\"(.*?)\"$'
        import re
        file = open(f, 'r')
        datastr = file.read()
        file.close()
        keys = re.findall(key_pattern, datastr, re.IGNORECASE | re.MULTILINE)
        for m in re.finditer(key_pattern, datastr, re.IGNORECASE | re.MULTILINE):
            print(m.group(1), m.group(2))
            setattr(self, m.group(1), float(m.group(2)))

class ExtTable():
    def __init__(self):
        self.ExtraData = ExtraDataClass()